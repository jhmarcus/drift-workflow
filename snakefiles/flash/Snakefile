#!python
import glob
import os

# global variables
RSCRIPT_PATH = "/software/R-3.5.1-el7-x86_64/lib64/R/bin/Rscript "
KMAX = 12

# setup the output files 
dataset_paths = glob.glob("data/datasets/*")
rds_greedy = []
rds_backfit = []
rds_drift = []
for dataset_path in dataset_paths:
    dataset = os.path.basename(dataset_path)
    if dataset in ["hoa_global", "hoa_weur"]: 
      bed_lst = glob.glob("{}/*.bed".format(dataset_path))
      if len(bed_lst) > 0:
        bed_path = bed_lst[0]
        prefix = os.path.basename(bed_path).split(".")[0]
        for k in range(2, KMAX+1):
          rds_greedy.append("output/flash_greedy/{}/{}_K{}.rds".format(dataset, prefix, k))
          rds_backfit.append("output/flash_backfit/{}/{}_K{}.rds".format(dataset, prefix, k))
          rds_drift.append("output/drift/{}/{}_K{}.rds".format(dataset, prefix, k))


rule flash_all:
    """Runs all the flash rules
    """
    input:
        rds_greedy,
        rds_backfit,
        rds_drift


rule run_flash_greedy:
    """Runs greedy algorithim 
    """
    input:
        bed = "data/datasets/{dataset}/{prefix}.bed"
    params:
        bed = "data/datasets/{dataset}/{prefix}",
        k = "{k}"
    output:
        rds = "output/flash_greedy/{dataset}/{prefix}_K{k}.rds"
    benchmark:
        "output/benchmark/flash_greedy/{dataset}/{prefix}_K{k}.txt"
    run:
      shell(RSCRIPT_PATH + "--vanilla code/run_flash_greedy.R {params.bed} {output.rds} {params.k}")


rule run_flash_backfit:
    """Runs backfitting algorithim 
    """
    input:
        rds = "output/flash_greedy/{dataset}/{prefix}_K{k}.rds"
    output:
        rds = "output/flash_backfit/{dataset}/{prefix}_K{k}.rds"
    benchmark:
        "output/benchmark/flash_backfit/{dataset}/{prefix}_K{k}.txt"
    run:
      shell(RSCRIPT_PATH + "--vanilla code/run_flash_backfit.R {input.rds} {output.rds}")


rule run_drift:
    """Runs drift algorithim 
    """
    input:
        rds = "output/flash_greedy/{dataset}/{prefix}_K{k}.rds"
    output:
        rds = "output/drift/{dataset}/{prefix}_K{k}.rds"
    benchmark:
        "output/benchmark/drift/{dataset}/{prefix}_K{k}.txt"
    run:
      shell(RSCRIPT_PATH + "--vanilla code/run_flash_drift.R {input.rds} {output.rds}")
