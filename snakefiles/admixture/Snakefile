#!python
import glob
import os
import numpy as np
import pandas as pd

# setup the output files 
qs = []
ps = []
max_K = 12
n_rep = 1
dataset_paths = glob.glob("data/datasets/*")
for dataset_path in dataset_paths:
    dataset = os.path.basename(dataset_path)
    if dataset in ["hoa_global"]:
        bed_path = glob.glob("{}/*.bed".format(dataset_path))[0]
        prefix = os.path.basename(bed_path).split(".")[0]
        for k in range(2, max_K):
            for r in range(n_rep):
                qs.append("output/admixture/{}/{}.K{}r{}.Q".format(dataset, prefix, k, r + 1))
                ps.append("output/admixture/{}/{}.K{}r{}.P".format(dataset, prefix, k, r + 1))


rule admixture_all:
    """Runs all admixture rules
    """
    input:
        qs,
        ps


rule run_admixture:
    """Runs admixture
    """
    input:
        bed = "data/datasets/{dataset}/{prefix}.bed"
    params:
        K = "{K}",
        r = "{r}",
        q = "./{prefix}.{K}.Q",
        p = "./{prefix}.{K}.P"
    output:
        q="output/admixture/{dataset}/{prefix}.K{K}r{r}.Q",
        p="output/admixture/{dataset}/{prefix}.K{K}r{r}.P"
    benchmark:
        "output/benchmark/admixture/{dataset}/{prefix}.K{K}r{r}.txt"
    run:
        shell("admixture -s ${{RANDOM}} {input.bed} {params.K} -j8")
        shell("mv {params.p} {output.p}")
        shell("mv {params.q} {output.q}")
