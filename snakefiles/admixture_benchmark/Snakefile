#!python
import glob
import os
import numpy as np
import pandas as pd

# setup the output files 
qs = []
ps = []
benchmarks = []
max_K = 8
n_rep = 1
tols = [.0001, .001, .01]
dataset_paths = glob.glob("data/datasets/*")
for dataset_path in dataset_paths:
    dataset = os.path.basename(dataset_path)
    bed_path = glob.glob("{}/*.bed".format(dataset_path))[0]
    prefix = os.path.basename(bed_path).split(".")[0]
    for k in range(2, max_K):
        for r in range(n_rep):
            for tol in tols:
                qs.append("output/admixture_benchmark/{}/{}.K{}r{}tol{}.Q".format(dataset, prefix, k, r + 1, tol))
                ps.append("output/admixture_benchmark/{}/{}.K{}r{}tol{}.P".format(dataset, prefix, k, r + 1, tol))
                benchmarks.append("output/benchmark/admixture_benchmark_{}_{}_{}_{}_{}.txt".format(dataset, prefix, k, r + 1, tol))

localrules: merge_benchmarks

rule admixture_benchmark_all:
    """Runs all admixture benchmark rules
    """
    input:
        qs,
        ps,
        "output/benchmark/admixture_benchmark_hoa_global_ld_HumanOriginsPublic2068_maf_geno_auto_ldprune.csv"


rule run_admixture_benchmark:
    """Runs admixture benchmark
    """
    input:
        bed = "data/datasets/{dataset}/{prefix}.bed"
    params:
        K = "{K}",
        r = "{r}",
        q = "./{prefix}.{K}.Q",
        p = "./{prefix}.{K}.P"
    output:
        q="output/admixture_benchmark/{dataset}/{prefix}.K{K}r{r}tol{tol}.Q",
        p="output/admixture_benchmark/{dataset}/{prefix}.K{K}r{r}tol{tol}.P"
    log:
        "output/log/admixture_benchmark_{dataset}_{prefix}_{K}_{r}_{tol}.log"
    benchmark:
        "output/benchmark/admixture_benchmark_{dataset}_{prefix}_{K}_{r}_{tol}.txt"
    run:
        shell("admixture -C {tol} -s ${{RANDOM}} {input.bed} {params.K} -j8")
        shell("mv {params.p} {output.p}")
        shell("mv {params.q} {output.q}")

rule merge_benchmarks:
    """Merges benchmarks
    """
    input:
        benchmarks=benchmarks
    output: 
        csv="output/benchmark/admixture_benchmark_{dataset}_{prefix}.csv"
    run:
        df = pd.DataFrame({})
        for benchmark in input.benchmarks:
            b = os.path.basename(benchmark)
            b_lst = b.strip('.txt').split("_")
            tol = np.array(b_lst[-1])
            r = np.array(b_lst[-2])
            K = np.array(b_lst[-3])
            row_df = pd.read_csv(benchmark, sep="\t", header=0)
            row_df["tol"] = tol
            row_df["r"] = r
            row_df["K"] = K
            df = pd.concat([df, row_df], axis=0)
        df.to_csv(output.csv, index=False)
